#pragma once

#include "aqueue.h"
#include "i_aqueue_callback.h"

#include <string>

using namespace std;

namespace dahlia
{
    class aqueue_manager_t;

    class aqueue_obj_t: public i_asynobj_events
    {
    public:
        aqueue_obj_t(const string& obj_id_, aqueue_manager_t* mgr_);
        ~aqueue_obj_t(void);

        /************************************************************************
        * 名称：on_time
        * 说明：//定时器实现者实现该函数。
        * 参数：id定时器事件ID
        * 返回值：无
        /************************************************************************/
        virtual void on_time(int id) = 0;  

        /************************************************************************
        * 名称：on_attach
        * 说明：附加对象到线程成功事件
        * 参数：无
        * 返回值：无
        /************************************************************************/
        virtual void on_attach() = 0;  

        /************************************************************************
        * 名称：on_detach
        * 说明：从线程分离事件
        * 参数：无
        * 返回值：无
        /************************************************************************/
        virtual void on_detach() = 0;  

        /************************************************************************
        * 名称：on_msg
        * 说明：响应其他线程的消息
        * 参数：cmd 命令ID,lparm,wparam
        * 返回值：无
        /************************************************************************/
        virtual void on_msg(int cmd_, int lparm_, long wparam_) = 0;  

        /************************************************************************
        * 名称：get_id
        * 说明：获取本异步对象的ID
        * 参数：无
        * 返回值：对象ID
        /************************************************************************/
        string get_id();

        /************************************************************************
        * 名称：get_mgr
        * 说明：获取当前异步对象管理类
        * 参数：无
        * 返回值：对象ID
        /************************************************************************/
        aqueue_manager_t* get_mgr();

        /************************************************************************
        * 名称：add_timer
        * 说明：返回对象是否被初始化
        * 参数：无
        * 返回值：对象ID
        /************************************************************************/


        void add_timer( int tmid_, int tmout_ );


    private:
        /************************************************************************/
        /* 异步对象继承实现																								 */
        /************************************************************************/
        virtual void attach_event () ;
        virtual void dettach_event ();
        virtual void timer_event (int id_);
        virtual void msg_event(aqueue::aqueue_msg_t* msg_);
    private:
        string  _obj_id;//对象ID
        aqueue_manager_t* _aobj_mgr;//异步对象管理类
       
    private:
        aqueue_obj_t (const aqueue_obj_t&);
        const aqueue_obj_t &operator = (const aqueue_obj_t&);
    };
}