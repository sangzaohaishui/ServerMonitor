/************************************************************************/
/* 兵力状态                                                                     */
/************************************************************************/
#include "IServiceComponent.h"


class SkyElecReconActionInterface;

// 此类是从 OurZZLLStatusComponent.dll 导出的
class  NodeMonitorCompoent :  public IServiceComponent
{
public:
	NodeMonitorCompoent(void);
	// TODO: 在此添加您的方法。

	
	/************************************************************************
	*名  称：初始化函数 
	*说  明：由框架初始化的时候调用该函数,二次开发者在此处填写资源申请类操作
	*参  数：无                                                                    
	*返回值：无
	************************************************************************/
	virtual void OnInitialization(const IMainServiceControl* ptrMainServiceControl) ;

	/************************************************************************
	*名  称：反初始化函数 
	*说  明：由框架在退出时调用该函数,二次开发者应在此处释放所有申请的资源
	*参  数：无                                                                    
	*返回值：无
	************************************************************************/
	virtual void OnRelease() ;

	/************************************************************************
	*名  称：组件自定义接口获取函数
	*说  明：获取组件注册的接口函数,注意默认必须要返回NULL
	*参  数：interfaceID----接口标识(要求全局唯一)                                                                    
	*返回值：组件自定义接口指针
	************************************************************************/
	virtual IInterface* QueryInterface(std::string interfaceID) ;

	/************************************************************************
	*名  称：获取组件标识 
	*说  明：二次开发者在此处注册组件的标识,直接将标识字符串返回即可
	*参  数：无                                                                    
	*返回值：组件标识
	************************************************************************/
	virtual std::string GetComponentID() ;

	/************************************************************************
	*名  称：消息处理回调 
	*说  明：框架按照主题推送消息,同步和异步都在这里回调
	*参  数：topic----主题标识
			 buf----数据地址
			 length----数据长度
	*返回值：无
	************************************************************************/
	virtual void OnMessage(std::string topic, void* buf, unsigned int length) ;

private:

	SkyElecReconActionInterface* m_SkyElecReconActInterface;
};

